Lab report for Linked List Lab - bwalter4
Timestamp: 2013-09-24 16:16:52

|  :scenario |                                    :title |                              :result | :score |
|------------+-------------------------------------------+--------------------------------------+--------|
|    working |     Test student code vs instructor tests |                                 Pass |     45 |
| qualifying |     Test student tests vs instructor code |                                 Pass |      5 |
|    broke-1 |             Insert at end mishandles nil. | Pass: Student tests detected errors. |      5 |
|    broke-2 |     Sorted insert sorts in reverse order. | Pass: Student tests detected errors. |      5 |
|    broke-3 |     Sorted insert doesn't recycle memory. | Pass: Student tests detected errors. |      5 |
|    broke-4 |          Search doesn't handle base case. | Pass: Student tests detected errors. |      5 |
|    broke-5 |                Delete removes all copies. | Pass: Student tests detected errors. |      5 |
|    broke-6 |                           Delete doesn't. | Pass: Student tests detected errors. |      5 |
|    broke-7 |              Delete all only deletes one. | Pass: Student tests detected errors. |      5 |
|    broke-8 |                Delete all truncates list. | Pass: Student tests detected errors. |      5 |
|    broke-9 |          Efficient delete doesn't delete. | Pass: Student tests detected errors. |      5 |
|   broke-10 | Efficient delete doesn't return original. | Pass: Student tests detected errors. |      5 |
|      total |                               Total Score |                                      |    100 |

Details:


** Details for Test student code vs instructor tests

........................

Finished in 0.00706 seconds
24 examples, 0 failures


** Details for Test student tests vs instructor code

....................................

Finished in 0.00688 seconds
36 examples, 0 failures


** Details for Insert at end mishandles nil.

.......FFF..........................

Failures:

  1) insert-at-end creates a cons cell
     Expected: nil
     not to =: nil
     /home/grader/quarry/linked-list-lab/bwalter4/broke-1/spec/linked_lists/core_spec.clj:38

  2) insert-at-end should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-1/spec/linked_lists/core_spec.clj:41

  3) insert-at-end should work with empty lists
     Expected: #linked_lists.core.Cons{:car 10, :cdr nil}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-1/spec/linked_lists/core_spec.clj:44

Finished in 0.08903 seconds
36 examples, 3 failures


** Details for Sorted insert sorts in reverse order.

...........FFFF.....................

Failures:

  1) sorted insert should work when item belongs at beginning (smallest)
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-2/spec/linked_lists/core_spec.clj:52

  2) sorted insert should work when item belongs at end (largest)
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-2/spec/linked_lists/core_spec.clj:55

  3) sorted insert should work with a value in the middle
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-2/spec/linked_lists/core_spec.clj:57

  4) sorted insert should recycle memory.
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-2/spec/linked_lists/core_spec.clj:62

Finished in 0.05633 seconds
36 examples, 4 failures


** Details for Sorted insert doesn't recycle memory.

..............F.....................

Failures:

  1) sorted insert should recycle memory.
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/bwalter4/broke-3/spec/linked_lists/core_spec.clj:63

Finished in 0.01558 seconds
36 examples, 1 failures


** Details for Search doesn't handle base case.

...............FF..................F

Failures:

  1) search should return false for an empty set
     Expected falsy but was: true
     /home/grader/quarry/linked-list-lab/bwalter4/broke-4/spec/linked_lists/core_spec.clj:70

  2) search should return false if value not in list
     Expected falsy but was: true
     /home/grader/quarry/linked-list-lab/bwalter4/broke-4/spec/linked_lists/core_spec.clj:73

  3) efficient-delete should return original list if elt is not in list
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/bwalter4/broke-4/spec/linked_lists/core_spec.clj:141

Finished in 0.00779 seconds
36 examples, 3 failures


** Details for Delete removes all copies.

........................F.........F.

Failures:

  1) delete should delete only first elt
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 40, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-5/spec/linked_lists/core_spec.clj:100

  2) efficient-delete should delete only first elt
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 40, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-5/spec/linked_lists/core_spec.clj:138

Finished in 0.03817 seconds
36 examples, 2 failures


** Details for Delete doesn't.

......................FFF.......FFF.

Failures:

  1) delete should work when elt at beginning
     Expected: #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-6/spec/linked_lists/core_spec.clj:94

  2) delete should work when elt at end
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-6/spec/linked_lists/core_spec.clj:97

  3) delete should delete only first elt
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 40, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-6/spec/linked_lists/core_spec.clj:100

  4) efficient-delete should work when elt at beginning
     Expected: #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-6/spec/linked_lists/core_spec.clj:132

  5) efficient-delete should work when elt at end
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-6/spec/linked_lists/core_spec.clj:135

  6) efficient-delete should delete only first elt
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 40, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-6/spec/linked_lists/core_spec.clj:138

Finished in 0.03689 seconds
36 examples, 6 failures


** Details for Delete all only deletes one.

.............................F......

Failures:

  1) delete-all should delete all instances of elt found
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 40, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-7/spec/linked_lists/core_spec.clj:119

Finished in 0.06526 seconds
36 examples, 1 failures


** Details for Delete all truncates list.

...........................F.F......

Failures:

  1) delete-all should work when elt at beginning
     Expected: #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-8/spec/linked_lists/core_spec.clj:113

  2) delete-all should delete all instances of elt found
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}
          got: #linked_lists.core.Cons{:car 20, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-8/spec/linked_lists/core_spec.clj:119

Finished in 0.05978 seconds
36 examples, 2 failures


** Details for Efficient delete doesn't delete.

...........................F.F..FFF.

Failures:

  1) delete-all should work when elt at beginning
     Expected: #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-9/spec/linked_lists/core_spec.clj:113

  2) delete-all should delete all instances of elt found
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}
          got: #linked_lists.core.Cons{:car 20, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-9/spec/linked_lists/core_spec.clj:119

  3) efficient-delete should work when elt at beginning
     Expected: #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-9/spec/linked_lists/core_spec.clj:132

  4) efficient-delete should work when elt at end
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-9/spec/linked_lists/core_spec.clj:135

  5) efficient-delete should delete only first elt
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 40, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/bwalter4/broke-9/spec/linked_lists/core_spec.clj:138

Finished in 0.04132 seconds
36 examples, 5 failures


** Details for Efficient delete doesn't return original.

...................................F

Failures:

  1) efficient-delete should return original list if elt is not in list
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/bwalter4/broke-10/spec/linked_lists/core_spec.clj:141

Finished in 0.00754 seconds
36 examples, 1 failures
