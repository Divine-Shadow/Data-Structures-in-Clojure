Lab report for Linked List Lab - nkaminsk
Timestamp: 2013-10-03 00:43:41

|  :scenario |                                    :title |                              :result | :score |
|------------+-------------------------------------------+--------------------------------------+--------|
|    working |     Test student code vs instructor tests |                                 Pass |     45 |
| qualifying |     Test student tests vs instructor code |                                 Pass |      5 |
|    broke-1 |             Insert at end mishandles nil. | Pass: Student tests detected errors. |      5 |
|    broke-2 |     Sorted insert sorts in reverse order. | Pass: Student tests detected errors. |      5 |
|    broke-3 |     Sorted insert doesn't recycle memory. | Pass: Student tests detected errors. |      5 |
|    broke-4 |          Search doesn't handle base case. | Pass: Student tests detected errors. |      5 |
|    broke-5 |                Delete removes all copies. | Pass: Student tests detected errors. |      5 |
|    broke-6 |                           Delete doesn't. | Pass: Student tests detected errors. |      5 |
|    broke-7 |              Delete all only deletes one. | Pass: Student tests detected errors. |      5 |
|    broke-8 |                Delete all truncates list. | Pass: Student tests detected errors. |      5 |
|    broke-9 |          Efficient delete doesn't delete. | Pass: Student tests detected errors. |      5 |
|   broke-10 | Efficient delete doesn't return original. | Pass: Student tests detected errors. |      5 |
|      total |                               Total Score |                                      |    100 |

Details:


** Details for Test student code vs instructor tests

........................

Finished in 0.00557 seconds
24 examples, 0 failures


** Details for Test student tests vs instructor code

.........................

Finished in 0.00549 seconds
25 examples, 0 failures


** Details for Insert at end mishandles nil.

.......FFF...............

Failures:

  1) insert-at-end creates a cons cell
     Expected: nil
     not to =: nil
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-1/spec/linked_lists/core_spec.clj:37

  2) insert-at-end should work with empty lists
     Expected: #linked_lists.core.Cons{:car 10, :cdr nil}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-1/spec/linked_lists/core_spec.clj:40

  3) insert-at-end should insert data correctly
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 40, :cdr nil}}}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-1/spec/linked_lists/core_spec.clj:45

Finished in 0.06637 seconds
25 examples, 3 failures


** Details for Sorted insert sorts in reverse order.

............F............

Failures:

  1) sorted insert should insert data correctly
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 50, :cdr nil}}}}
          got: #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 50, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-2/spec/linked_lists/core_spec.clj:58

Finished in 0.07619 seconds
25 examples, 1 failures


** Details for Sorted insert doesn't recycle memory.

.............F...........

Failures:

  1) sorted insert should recycle memory
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-3/spec/linked_lists/core_spec.clj:61

Finished in 0.01443 seconds
25 examples, 1 failures


** Details for Search doesn't handle base case.

..............FF........F

Failures:

  1) search should work with empty lists
     Expected falsy but was: true
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-4/spec/linked_lists/core_spec.clj:66

  2) search should return nil if element doesnt exist
     Expected falsy but was: true
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-4/spec/linked_lists/core_spec.clj:68

  3) efficient-delete should return the original list if elt doesn't exist)
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-4/spec/linked_lists/core_spec.clj:106

Finished in 0.01446 seconds
25 examples, 3 failures


** Details for Delete removes all copies.

..................F......

Failures:

  1) delete should delete only one copy
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 50, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 50, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-5/spec/linked_lists/core_spec.clj:80

Finished in 0.06312 seconds
25 examples, 1 failures


** Details for Delete doesn't.

..................F....F.

Failures:

  1) delete should delete only one copy
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 50, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 50, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}}} (using =)
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-6/spec/linked_lists/core_spec.clj:80

  2) efficient-delete should delete only one copy
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 50, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 50, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-6/spec/linked_lists/core_spec.clj:103

Finished in 0.06169 seconds
25 examples, 2 failures


** Details for Delete all only deletes one.

.....................F...

Failures:

  1) delete-all should delete more than one copy
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 50, :cdr nil}}
          got: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 50, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-7/spec/linked_lists/core_spec.clj:93

Finished in 0.09512 seconds
25 examples, 1 failures


** Details for Delete all truncates list.

....................FF...

Failures:

  1) delete-all should delete one copy
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 50, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}} (using =)
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-8/spec/linked_lists/core_spec.clj:89

  2) delete-all should delete more than one copy
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 50, :cdr nil}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-8/spec/linked_lists/core_spec.clj:93

Finished in 0.04366 seconds
25 examples, 2 failures


** Details for Efficient delete doesn't delete.

....................FF...

Failures:

  1) delete-all should delete one copy
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 50, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr nil}} (using =)
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-9/spec/linked_lists/core_spec.clj:89

  2) delete-all should delete more than one copy
     Expected: #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 50, :cdr nil}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-9/spec/linked_lists/core_spec.clj:93

Finished in 0.05224 seconds
25 examples, 2 failures


** Details for Efficient delete doesn't return original.

........................F

Failures:

  1) efficient-delete should return the original list if elt doesn't exist)
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/nkaminsk/broke-10/spec/linked_lists/core_spec.clj:106

Finished in 0.00608 seconds
25 examples, 1 failures
