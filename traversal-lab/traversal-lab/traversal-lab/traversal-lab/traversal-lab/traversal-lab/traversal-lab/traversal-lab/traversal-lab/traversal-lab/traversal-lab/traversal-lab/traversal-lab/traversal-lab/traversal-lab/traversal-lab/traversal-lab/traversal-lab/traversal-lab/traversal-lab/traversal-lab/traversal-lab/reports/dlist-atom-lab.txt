Lab report for Doubly Linked Lists with Atoms - morlowsk
Timestamp: 2013-11-03 16:37:10

|  :scenario |                                   :title |                              :result | :score |
|------------+------------------------------------------+--------------------------------------+--------|
|    working |    Test student code vs instructor tests |                                      |        |
| qualifying |    Test student tests vs instructor code |                                 Pass |      5 |
|    broke-1 |     Insert front doesn't increment size. | Pass: Student tests detected errors. |      5 |
|    broke-2 |  Insert front doens't set previous link. | Pass: Student tests detected errors. |      5 |
|    broke-3 |               Insert last inserts front. | Pass: Student tests detected errors. |      5 |
|    broke-4 |        Insert-sorted misses a back-link. | Pass: Student tests detected errors. |      5 |
|    broke-5 |         Index-forward doesn't return nil | Pass: Student tests detected errors. |      5 |
|    broke-6 | Index-backward returns positive numbers. | Pass: Student tests detected errors. |      5 |
|    broke-7 |                Index-backward off by one | Pass: Student tests detected errors. |      5 |
|    broke-8 |            Delete assumes list is sorted | Pass: Student tests detected errors. |      5 |
|    broke-9 |      Reverse doesn't fix the back edges. | Pass: Student tests detected errors. |      5 |
|   broke-10 |        List to Dlist messes up pointers. | Pass: Student tests detected errors. |      5 |
|      total |                              Total Score |                                      |     55 |

Details:


** Details for Test student code vs instructor tests

.........F......F......FFF.....F.FFF

Failures:

  1) Insert-front multiple times will convert to a list properly
     Expected: (10 20 30)
          got: (10) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/working/spec/dlist_atom/core_spec.clj:75

  2) Insert-last multiple times will convert to a list properly
     Expected: (30 20 10)
          got: (30) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/working/spec/dlist_atom/core_spec.clj:125

  3) Insert-sorted multiple times will insert 10 20 30 properly
     Expected: (30 20 10)
          got: (30) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/working/spec/dlist_atom/core_spec.clj:176

  4) Insert-sorted multiple times will insert 30 20 10 properly
     Expected: (30 20 10)
          got: (30) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/working/spec/dlist_atom/core_spec.clj:183

  5) Insert-sorted multiple times will insert 10 30 20 properly
     Expected: (30 20 10)
          got: (30) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/working/spec/dlist_atom/core_spec.clj:190

  6) list-to-dlist creates full lists properly
     Expected: (9 0 3 5 7 6 8)
          got: (9) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/working/spec/dlist_atom/core_spec.clj:234

  7) delete deletes elements properly.
     Expected: (9 0 3 7 6 8)
          got: (9) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/working/spec/dlist_atom/core_spec.clj:247

  8) reverse should not mess up empty lists.
     
     java.lang.StackOverflowError
     	at dlist_atom.core$rev_aux.invoke(core.clj:211)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invoke(core.clj:219)
     	at dlist_atom.core$rev_aux.invWARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core, being replaced by: #'dlist-atom.core/reverse


** Details for Test student tests vs instructor code

..............................

Finished in 0.00633 seconds
30 examples, 0 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse


** Details for Insert front doesn't increment size.

..F..........F.............F..

Failures:

  1) insert-front should increase size by the amount I insert
     Expected: 2
          got: 0 (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-1/spec/dlist_atom/core_spec.clj:27

  2) insert-sorted should increase the size by one in a list with data.
     Expected: 6
          got: 1 (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-1/spec/dlist_atom/core_spec.clj:105

  3) delete should decrement the size
     Expected: 4
          got: -1 (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-1/spec/dlist_atom/core_spec.clj:238

Finished in 0.01361 seconds
30 examples, 3 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse


** Details for Insert front doens't set previous link.

...F...............FF...FFF.F.

Failures:

  1) insert-front should make the previous of the node point to first element inserted
     Expected: 5
          got: sentinel (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-2/spec/dlist_atom/core_spec.clj:33

  2) index-backward should return -1 at the last position (back)
     Expected: -1
          got: nil (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-2/spec/dlist_atom/core_spec.clj:162

  3) index-backward should return -n at the nth position (front)
     Expected: -5
          got: nil (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-2/spec/dlist_atom/core_spec.clj:172

  4) delete should delete if the element is in the middle
     Expected: 6
          got: sentinel (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-2/spec/dlist_atom/core_spec.clj:208

  5) delete should not assume that the list is sorted.
     Expected: 53
          got: sentinel (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-2/spec/dlist_atom/core_spec.clj:218

  6) delete should delete if the element is in the middle
     Expected: 8
          got: sentinel (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-2/spec/dlist_atom/core_spec.clj:228

  7) delete multiple times will convert to a list properly.
     Expected: (30)
          got: (5 10 30) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-2/spec/dlist_atom/core_spec.clj:247

Finished in 0.05372 seconds
30 examples, 7 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse


** Details for Insert last inserts front.

......F.FF.............F......

Failures:

  1) insert-last should work with lists with data in them.
     Expected: 8
          got: 6 (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-3/spec/dlist_atom/core_spec.clj:53

  2) insert-last should make the next of the node point to first element inserted
     Expected: 5
          got: 7 (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-3/spec/dlist_atom/core_spec.clj:65

  3) insert-last multiple times will convert to a list properly.
     Expected: (10 20 30)
          got: (30 20 10) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-3/spec/dlist_atom/core_spec.clj:72

  4) list-to-dlist will convert to a list properly.
     Expected: (6 5 4 3 2 1)
          got: (1 2 3 4 5 6) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-3/spec/dlist_atom/core_spec.clj:194

Finished in 0.06944 seconds
30 examples, 4 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse


** Details for Insert-sorted misses a back-link.

............F.................

Failures:

  1) insert-sorted should have a back link.
     Expected: 5
          got: sentinel (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-4/spec/dlist_atom/core_spec.clj:95

Finished in 0.01952 seconds
30 examples, 1 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse


** Details for Index-forward doesn't return nil

.................F............

Failures:

  1) index forward should return nil if there's nothing in the list
     Expected: nil
          got: 5 (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-5/spec/dlist_atom/core_spec.clj:140

Finished in 0.01640 seconds
30 examples, 1 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse


** Details for Index-backward returns positive numbers.

...................FF.........

Failures:

  1) index-backward should return -1 at the last position (back)
     Expected: -1
          got: 0 (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-6/spec/dlist_atom/core_spec.clj:162

  2) index-backward should return -n at the nth position (front)
     Expected: -5
          got: 4 (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-6/spec/dlist_atom/core_spec.clj:172

Finished in 0.03429 seconds
30 examples, 2 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse


** Details for Index-backward off by one

...................FF.........

Failures:

  1) index-backward should return -1 at the last position (back)
     Expected: -1
          got: 0 (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-7/spec/dlist_atom/core_spec.clj:162

  2) index-backward should return -n at the nth position (front)
     Expected: -5
          got: -4 (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-7/spec/dlist_atom/core_spec.clj:172

Finished in 0.01667 seconds
30 examples, 2 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse


** Details for Delete assumes list is sorted

............................F.

Failures:

  1) delete multiple times will convert to a list properly.
     Expected: (5 10 20 30)
          got: (5 10 30) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-8/spec/dlist_atom/core_spec.clj:247

Finished in 0.09063 seconds
30 examples, 1 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse


** Details for Reverse doesn't fix the back edges.

.............................F

Failures:

  1) reverse should make the old next of the sentinel the new prev of the sentinel
     Expected: 10
          got: 5 (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-9/spec/dlist_atom/core_spec.clj:261

Finished in 0.01508 seconds
30 examples, 1 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse


** Details for List to Dlist messes up pointers.

.......................F......

Failures:

  1) list-to-dlist will convert to a list properly.
     Expected: (6 5 4 3 2 1)
          got: (1 2 3 4 5 6) (using =)
     /home/grader/quarry/dlist-atom-lab/morlowsk/broke-10/spec/dlist_atom/core_spec.clj:194

Finished in 0.07399 seconds
30 examples, 1 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse
