Lab report for Stack and Queue Lab - dfallon
Timestamp: 2013-10-22 00:03:06

|  :scenario |                                  :title |                                   :result | :score |
|------------+-----------------------------------------+-------------------------------------------+--------|
|    working |   Test student code vs instructor tests |                                      Pass |     45 |
| qualifying |   Test student tests vs instructor code |                                      Pass |      5 |
|    broke-1 |            Push doesn't increment size. |      Pass: Student tests detected errors. |      5 |
|    broke-2 |       Pop of empty makes size negative. | Fail: Student tests did not detect error. |      0 |
|    broke-3 |            Pop doesn't remove elements. |      Pass: Student tests detected errors. |      5 |
|    broke-4 |                  Pop reverses elements. |      Pass: Student tests detected errors. |      5 |
|    broke-5 |         Enqueue doesn't increment size. |      Pass: Student tests detected errors. |      5 |
|    broke-6 |   Dequeue of empty makes size negative. |      Pass: Student tests detected errors. |      5 |
|    broke-7 |  Dequeue doesn't reverse when flipping. |      Pass: Student tests detected errors. |      5 |
|    broke-8 | Dequeue doesn't dequeue after flipping. |      Pass: Student tests detected errors. |      5 |
|    broke-9 |            Flipping doesn't erase back. |      Pass: Student tests detected errors. |      5 |
|   broke-10 |             Queue behaves like a stack. |      Pass: Student tests detected errors. |      5 |
|      total |                             Total Score |                                           |     95 |

Details:


** Details for Test student code vs instructor tests

....................

Finished in 0.00936 seconds
20 examples, 0 failures


** Details for Test student tests vs instructor code

.............

Finished in 0.00310 seconds
13 examples, 0 failures


** Details for Push doesn't increment size.

...F.........

Failures:

  1) Push should add an item to the stack
     Expected: #fifolifo.core.Stack{:top (44 1 3 4 5 7 9 10 11 13), :size 10}
          got: #fifolifo.core.Stack{:top (44 1 3 4 5 7 9 10 11 13), :size 9} (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-1/spec/fifolifo/core_spec.clj:27

Finished in 0.13336 seconds
13 examples, 1 failures


** Details for Pop of empty makes size negative.

.............

Finished in 0.00311 seconds
13 examples, 0 failures


** Details for Pop doesn't remove elements.

....F........

Failures:

  1) Pop should remove an item from the top of the stack
     Expected: #fifolifo.core.Stack{:top (3 4 5 7 9 10 11 13), :size 8}
          got: #fifolifo.core.Stack{:top (1 3 4 5 7 9 10 11 13), :size 8} (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-3/spec/fifolifo/core_spec.clj:35

Finished in 0.05314 seconds
13 examples, 1 failures


** Details for Pop reverses elements.

....FF.......

Failures:

  1) Pop should remove an item from the top of the stack
     Expected: #fifolifo.core.Stack{:top (3 4 5 7 9 10 11 13), :size 8}
          got: #fifolifo.core.Stack{:top (1 3 4 5 7 9 10 11), :size 8} (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-4/spec/fifolifo/core_spec.clj:35

  2) Top should return the top item in the stack
     Expected: 1
          got: 13 (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-4/spec/fifolifo/core_spec.clj:43

Finished in 0.10807 seconds
13 examples, 2 failures


** Details for Enqueue doesn't increment size.

.........F..F

Failures:

  1) The queue declaration should increment size of queue
     Expected: 5
          got: 0 (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-5/spec/fifolifo/core_spec.clj:62

  2) The queue declaration should erase back
     Expected: nil
          got: (4 3 2 1) (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-5/spec/fifolifo/core_spec.clj:68

Finished in 0.06212 seconds
13 examples, 2 failures


** Details for Dequeue of empty makes size negative.

..........F..

Failures:

  1) The queue declaration shouldn't make size negative
     Expected: 0
          got: -1 (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-6/spec/fifolifo/core_spec.clj:64

Finished in 0.00929 seconds
13 examples, 1 failures


** Details for Dequeue doesn't reverse when flipping.

...........F.

Failures:

  1) The queue declaration not behave like stack
     Expected: 8
     not to =: 8
     /home/grader/quarry/fifolifo-lab/dfallon/broke-7/spec/fifolifo/core_spec.clj:66

Finished in 0.01365 seconds
13 examples, 1 failures


** Details for Dequeue doesn't dequeue after flipping.

..FFFF..FFF..

Failures:

  1) The stack declaration should have a size of zero.
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-8/spec/fifolifo/core_spec.clj:22

  2) Push should add an item to the stack
     Expected: #fifolifo.core.Stack{:top (44 1 3 4 5 7 9 10 11 13), :size 10}
          got: #fifolifo.core.Stack{:top (44 [:top (1 3 4 5 7 9 10 11 13)] [:size 9]), :size 10} (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-8/spec/fifolifo/core_spec.clj:27

  3) Pop should remove an item from the top of the stack
     Expected: #fifolifo.core.Stack{:top (3 4 5 7 9 10 11 13), :size 8}
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-8/spec/fifolifo/core_spec.clj:35

  4) Top should return the top item in the stack
     Expected: 1
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-8/spec/fifolifo/core_spec.clj:43

  5) The queue declaration should have a size of zero.
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-8/spec/fifolifo/core_spec.clj:60

  6) The queue declaration should increment size of queue
     Expected: 5
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-8/spec/fifolifo/core_spec.clj:62

  7) The queue declaration shouldn't make size negative
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-8/spec/fifolifo/core_spec.clj:64

Finished in 0.24838 seconds
13 examples, 7 failures


** Details for Flipping doesn't erase back.

............F

Failures:

  1) The queue declaration should erase back
     Expected: nil
          got: (4 3 2 1) (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-9/spec/fifolifo/core_spec.clj:68

Finished in 0.05513 seconds
13 examples, 1 failures


** Details for Queue behaves like a stack.

...........FF

Failures:

  1) The queue declaration not behave like stack
     Expected: 8
     not to =: 8
     /home/grader/quarry/fifolifo-lab/dfallon/broke-10/spec/fifolifo/core_spec.clj:66

  2) The queue declaration should erase back
     Expected: nil
          got: (3 2 1) (using =)
     /home/grader/quarry/fifolifo-lab/dfallon/broke-10/spec/fifolifo/core_spec.clj:68

Finished in 0.04238 seconds
13 examples, 2 failures
