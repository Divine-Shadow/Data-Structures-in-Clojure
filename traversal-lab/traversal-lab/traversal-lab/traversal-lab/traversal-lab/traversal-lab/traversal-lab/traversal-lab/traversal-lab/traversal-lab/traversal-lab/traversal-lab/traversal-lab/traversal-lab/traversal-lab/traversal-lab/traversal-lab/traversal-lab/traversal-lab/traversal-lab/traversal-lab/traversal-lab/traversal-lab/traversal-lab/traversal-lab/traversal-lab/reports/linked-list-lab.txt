Lab report for Linked List Lab - mdillon1
Timestamp: 2013-09-30 00:26:31

|  :scenario |                                    :title |                              :result | :score |
|------------+-------------------------------------------+--------------------------------------+--------|
|    working |     Test student code vs instructor tests |                                 Pass |     45 |
| qualifying |     Test student tests vs instructor code |                                 Pass |      5 |
|    broke-1 |             Insert at end mishandles nil. | Pass: Student tests detected errors. |      5 |
|    broke-2 |     Sorted insert sorts in reverse order. | Pass: Student tests detected errors. |      5 |
|    broke-3 |     Sorted insert doesn't recycle memory. | Pass: Student tests detected errors. |      5 |
|    broke-4 |          Search doesn't handle base case. | Pass: Student tests detected errors. |      5 |
|    broke-5 |                Delete removes all copies. | Pass: Student tests detected errors. |      5 |
|    broke-6 |                           Delete doesn't. | Pass: Student tests detected errors. |      5 |
|    broke-7 |              Delete all only deletes one. | Pass: Student tests detected errors. |      5 |
|    broke-8 |                Delete all truncates list. | Pass: Student tests detected errors. |      5 |
|    broke-9 |          Efficient delete doesn't delete. | Pass: Student tests detected errors. |      5 |
|   broke-10 | Efficient delete doesn't return original. | Pass: Student tests detected errors. |      5 |
|      total |                               Total Score |                                      |    100 |

Details:


** Details for Test student code vs instructor tests

........................

Finished in 0.00698 seconds
24 examples, 0 failures


** Details for Test student tests vs instructor code

...................

Finished in 0.00441 seconds
19 examples, 0 failures


** Details for Insert at end mishandles nil.

.......F...........

Failures:

  1) insert-at-end should insert at the end.
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/mdillon1/broke-1/spec/linked_lists/core_spec.clj:37

Finished in 0.05052 seconds
19 examples, 1 failures


** Details for Sorted insert sorts in reverse order.

........FFF........

Failures:

  1) sorted-insert should insert in the right place.
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/mdillon1/broke-2/spec/linked_lists/core_spec.clj:42

  2) sorted-insert should insert at the end if greater than all elements.
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/mdillon1/broke-2/spec/linked_lists/core_spec.clj:44

  3) sorted-insert should recycle the list
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/mdillon1/broke-2/spec/linked_lists/core_spec.clj:46

Finished in 0.05258 seconds
19 examples, 3 failures


** Details for Sorted insert doesn't recycle memory.

..........F........

Failures:

  1) sorted-insert should recycle the list
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/mdillon1/broke-3/spec/linked_lists/core_spec.clj:46

Finished in 0.00923 seconds
19 examples, 1 failures


** Details for Search doesn't handle base case.

............F.....F

Failures:

  1) search should return nil if it doesn't find anything
     Expected falsy but was: true
     /home/grader/quarry/linked-list-lab/mdillon1/broke-4/spec/linked_lists/core_spec.clj:53

  2) efficient-delete should return the same list, not a copy
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/mdillon1/broke-4/spec/linked_lists/core_spec.clj:75

Finished in 0.00579 seconds
19 examples, 2 failures


** Details for Delete removes all copies.

.............FF....

Failures:

  1) delete should delete exactly one of the proper value.
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/mdillon1/broke-5/spec/linked_lists/core_spec.clj:58

  2) delete should not delete more than one.
     Expected: #linked_lists.core.Cons{:car 1, :cdr nil}
     not to =: #linked_lists.core.Cons{:car 1, :cdr nil}
     /home/grader/quarry/linked-list-lab/mdillon1/broke-5/spec/linked_lists/core_spec.clj:60

Finished in 0.06003 seconds
19 examples, 2 failures


** Details for Delete doesn't.

.............F..FF.

Failures:

  1) delete should delete exactly one of the proper value.
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 2, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/mdillon1/broke-6/spec/linked_lists/core_spec.clj:58

  2) delete-all should delete one of the proper value.
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/mdillon1/broke-6/spec/linked_lists/core_spec.clj:68

  3) efficient-delete should delete
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/mdillon1/broke-6/spec/linked_lists/core_spec.clj:73

Finished in 0.06079 seconds
19 examples, 3 failures


** Details for Delete all only deletes one.

...............F...

Failures:

  1) delete-all should delete all of the correct value.
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 4, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/mdillon1/broke-7/spec/linked_lists/core_spec.clj:65

Finished in 0.04931 seconds
19 examples, 1 failures


** Details for Delete all truncates list.

...............F...

Failures:

  1) delete-all should delete all of the correct value.
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 1, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/mdillon1/broke-8/spec/linked_lists/core_spec.clj:65

Finished in 0.05323 seconds
19 examples, 1 failures


** Details for Efficient delete doesn't delete.

...............F.F.

Failures:

  1) delete-all should delete all of the correct value.
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 1, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/mdillon1/broke-9/spec/linked_lists/core_spec.clj:65

  2) efficient-delete should delete
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/mdillon1/broke-9/spec/linked_lists/core_spec.clj:73

Finished in 0.03890 seconds
19 examples, 2 failures


** Details for Efficient delete doesn't return original.

..................F

Failures:

  1) efficient-delete should return the same list, not a copy
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/mdillon1/broke-10/spec/linked_lists/core_spec.clj:75

Finished in 0.00772 seconds
19 examples, 1 failures
