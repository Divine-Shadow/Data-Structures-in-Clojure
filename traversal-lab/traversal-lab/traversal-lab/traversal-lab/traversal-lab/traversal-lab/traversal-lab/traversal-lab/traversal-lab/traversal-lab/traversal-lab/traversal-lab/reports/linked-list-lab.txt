Lab report for Linked List Lab - rander10
Timestamp: 2013-09-30 16:19:15

|  :scenario |                                    :title |                                   :result | :score |
|------------+-------------------------------------------+-------------------------------------------+--------|
|    working |     Test student code vs instructor tests |                                      Pass |     45 |
| qualifying |     Test student tests vs instructor code |                                      Pass |      5 |
|    broke-1 |             Insert at end mishandles nil. |      Pass: Student tests detected errors. |      5 |
|    broke-2 |     Sorted insert sorts in reverse order. |      Pass: Student tests detected errors. |      5 |
|    broke-3 |     Sorted insert doesn't recycle memory. | Fail: Student tests did not detect error. |      0 |
|    broke-4 |          Search doesn't handle base case. |      Pass: Student tests detected errors. |      5 |
|    broke-5 |                Delete removes all copies. | Fail: Student tests did not detect error. |      0 |
|    broke-6 |                           Delete doesn't. |      Pass: Student tests detected errors. |      5 |
|    broke-7 |              Delete all only deletes one. |      Pass: Student tests detected errors. |      5 |
|    broke-8 |                Delete all truncates list. |      Pass: Student tests detected errors. |      5 |
|    broke-9 |          Efficient delete doesn't delete. |      Pass: Student tests detected errors. |      5 |
|   broke-10 | Efficient delete doesn't return original. |      Pass: Student tests detected errors. |      5 |
|      total |                               Total Score |                                           |     90 |

Details:


** Details for Test student code vs instructor tests

........................

Finished in 0.00591 seconds
24 examples, 0 failures


** Details for Test student tests vs instructor code

....................

Finished in 0.00414 seconds
20 examples, 0 failures


** Details for Insert at end mishandles nil.

.......FFF..........

Failures:

  1) insert-at-end creates a con cell at the end
     Expected truthy but was: nil
     /home/grader/quarry/linked-list-lab/rander10/broke-1/spec/linked_lists/core_spec.clj:40

  2) insert-at-end should work with empty lists
     Expected: #linked_lists.core.Cons{:car 10, :cdr nil}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rander10/broke-1/spec/linked_lists/core_spec.clj:43

  3) insert-at-end should work with lists that have data
     Expected: 5
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rander10/broke-1/spec/linked_lists/core_spec.clj:46

Finished in 0.06545 seconds
20 examples, 3 failures


** Details for Sorted insert sorts in reverse order.

............F.......

Failures:

  1) sorted insert should work with lists that have data
     Expected: 5
          got: 2 (using =)
     /home/grader/quarry/linked-list-lab/rander10/broke-2/spec/linked_lists/core_spec.clj:60

Finished in 0.01802 seconds
20 examples, 1 failures


** Details for Sorted insert doesn't recycle memory.

....................

Finished in 0.00448 seconds
20 examples, 0 failures


** Details for Search doesn't handle base case.

..............F....F

Failures:

  1) search return false if the elemnt is not found
     Expected falsy but was: true
     /home/grader/quarry/linked-list-lab/rander10/broke-4/spec/linked_lists/core_spec.clj:74

  2) efficient-delete does not return the original
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/rander10/broke-4/spec/linked_lists/core_spec.clj:108

Finished in 0.00589 seconds
20 examples, 2 failures


** Details for Delete removes all copies.

....................

Finished in 0.00448 seconds
20 examples, 0 failures


** Details for Delete doesn't.

...............F..F.

Failures:

  1) delete removes a con cell
     Expected: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/rander10/broke-6/spec/linked_lists/core_spec.clj:80

  2) efficient-delete should remove a con cell
     Expected: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/rander10/broke-6/spec/linked_lists/core_spec.clj:104

Finished in 0.04943 seconds
20 examples, 2 failures


** Details for Delete all only deletes one.

.................F..

Failures:

  1) delete-all Make sure it removes all copies
     Expected: #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}
          got: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/rander10/broke-7/spec/linked_lists/core_spec.clj:98

Finished in 0.04673 seconds
20 examples, 1 failures


** Details for Delete all truncates list.

................FF..

Failures:

  1) delete-all should remove all elements from the list
     Expected: #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rander10/broke-8/spec/linked_lists/core_spec.clj:94

  2) delete-all Make sure it removes all copies
     Expected: #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rander10/broke-8/spec/linked_lists/core_spec.clj:98

Finished in 0.04727 seconds
20 examples, 2 failures


** Details for Efficient delete doesn't delete.

................FFF.

Failures:

  1) delete-all should remove all elements from the list
     Expected: #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rander10/broke-9/spec/linked_lists/core_spec.clj:94

  2) delete-all Make sure it removes all copies
     Expected: #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rander10/broke-9/spec/linked_lists/core_spec.clj:98

  3) efficient-delete should remove a con cell
     Expected: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 15, :cdr #linked_lists.core.Cons{:car 24, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/rander10/broke-9/spec/linked_lists/core_spec.clj:104

Finished in 0.04520 seconds
20 examples, 3 failures


** Details for Efficient delete doesn't return original.

...................F

Failures:

  1) efficient-delete does not return the original
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/rander10/broke-10/spec/linked_lists/core_spec.clj:108

Finished in 0.00632 seconds
20 examples, 1 failures
