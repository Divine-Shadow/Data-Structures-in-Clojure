Lab report for Stack and Queue Lab - mdillon1
Timestamp: 2013-10-21 16:50:21

|  :scenario |                                  :title |                              :result | :score |
|------------+-----------------------------------------+--------------------------------------+--------|
|    working |   Test student code vs instructor tests |                                 Pass |     45 |
| qualifying |   Test student tests vs instructor code |                                 Pass |      5 |
|    broke-1 |            Push doesn't increment size. | Pass: Student tests detected errors. |      5 |
|    broke-2 |       Pop of empty makes size negative. | Pass: Student tests detected errors. |      5 |
|    broke-3 |            Pop doesn't remove elements. | Pass: Student tests detected errors. |      5 |
|    broke-4 |                  Pop reverses elements. | Pass: Student tests detected errors. |      5 |
|    broke-5 |         Enqueue doesn't increment size. | Pass: Student tests detected errors. |      5 |
|    broke-6 |   Dequeue of empty makes size negative. | Pass: Student tests detected errors. |      5 |
|    broke-7 |  Dequeue doesn't reverse when flipping. | Pass: Student tests detected errors. |      5 |
|    broke-8 | Dequeue doesn't dequeue after flipping. | Pass: Student tests detected errors. |      5 |
|    broke-9 |            Flipping doesn't erase back. | Pass: Student tests detected errors. |      5 |
|   broke-10 |             Queue behaves like a stack. | Pass: Student tests detected errors. |      5 |
|      total |                             Total Score |                                      |    100 |

Details:


** Details for Test student code vs instructor tests

....................

Finished in 0.01221 seconds
20 examples, 0 failures


** Details for Test student tests vs instructor code

.............

Finished in 0.00369 seconds
13 examples, 0 failures


** Details for Push doesn't increment size.

...F.F.......

Failures:

  1) push should increment size
     Expected: 1
          got: 0 (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-1/spec/fifolifo/core_spec.clj:26

  2) pop should decrement size
     Expected: 1
          got: -1 (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-1/spec/fifolifo/core_spec.clj:33

Finished in 0.02868 seconds
13 examples, 2 failures


** Details for Pop of empty makes size negative.

....F........

Failures:

  1) pop should not make negative size
     Expected: 0
          got: -1 (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-2/spec/fifolifo/core_spec.clj:31

Finished in 0.01598 seconds
13 examples, 1 failures


** Details for Pop doesn't remove elements.

......F......

Failures:

  1) pop should not reverse
     Expected: #fifolifo.core.Stack{:top (2 3 4), :size 3}
          got: #fifolifo.core.Stack{:top (1 2 3 4), :size 3} (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-3/spec/fifolifo/core_spec.clj:35

Finished in 0.09900 seconds
13 examples, 1 failures


** Details for Pop reverses elements.

......F......

Failures:

  1) pop should not reverse
     Expected: #fifolifo.core.Stack{:top (2 3 4), :size 3}
          got: #fifolifo.core.Stack{:top (1 2 3), :size 3} (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-4/spec/fifolifo/core_spec.clj:35

Finished in 0.10242 seconds
13 examples, 1 failures


** Details for Enqueue doesn't increment size.

..........F..

Failures:

  1) enqueue should increment size
     Expected: 1
          got: 0 (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-5/spec/fifolifo/core_spec.clj:50

Finished in 0.01184 seconds
13 examples, 1 failures


** Details for Dequeue of empty makes size negative.

...........F.

Failures:

  1) dequeue should not make size negative
     Expected: 0
          got: -1 (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-6/spec/fifolifo/core_spec.clj:54

Finished in 0.02092 seconds
13 examples, 1 failures


** Details for Dequeue doesn't reverse when flipping.

............F

Failures:

  1) dequeue should reverse when flipping
     Expected: #fifolifo.core.Queue{:back nil, :front (2 3 4), :size 3}
          got: #fifolifo.core.Queue{:back nil, :front (3 2 1), :size 3} (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-7/spec/fifolifo/core_spec.clj:56

Finished in 0.11288 seconds
13 examples, 1 failures


** Details for Dequeue doesn't dequeue after flipping.

..FFFFF..FFFF

Failures:

  1) The stack declaration should have a size of zero.
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-8/spec/fifolifo/core_spec.clj:21

  2) push should increment size
     Expected: 1
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-8/spec/fifolifo/core_spec.clj:26

  3) pop should not make negative size
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-8/spec/fifolifo/core_spec.clj:31

  4) pop should decrement size
     Expected: 1
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-8/spec/fifolifo/core_spec.clj:33

  5) pop should not reverse
     Expected: #fifolifo.core.Stack{:top (2 3 4), :size 3}
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-8/spec/fifolifo/core_spec.clj:35

  6) The queue declaration should have a size of zero.
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-8/spec/fifolifo/core_spec.clj:46

  7) enqueue should increment size
     Expected: 1
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-8/spec/fifolifo/core_spec.clj:50

  8) dequeue should not make size negative
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-8/spec/fifolifo/core_spec.clj:54

  9) dequeue should reverse when flipping
     Expected: #fifolifo.core.Queue{:back nil, :front (2 3 4), :size 3}
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-8/spec/fifolifo/core_spec.clj:56

Finished in 0.13949 seconds
13 examples, 9 failures


** Details for Flipping doesn't erase back.

............F

Failures:

  1) dequeue should reverse when flipping
     Expected: #fifolifo.core.Queue{:back nil, :front (2 3 4), :size 3}
          got: #fifolifo.core.Queue{:back (4 3 2 1), :front (2 3 4), :size 3} (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-9/spec/fifolifo/core_spec.clj:56

Finished in 0.07873 seconds
13 examples, 1 failures


** Details for Queue behaves like a stack.

............F

Failures:

  1) dequeue should reverse when flipping
     Expected: #fifolifo.core.Queue{:back nil, :front (2 3 4), :size 3}
          got: #fifolifo.core.Queue{:back (3 2 1), :front nil, :size 3} (using =)
     /home/grader/quarry/fifolifo-lab/mdillon1/broke-10/spec/fifolifo/core_spec.clj:56

Finished in 0.11083 seconds
13 examples, 1 failures
