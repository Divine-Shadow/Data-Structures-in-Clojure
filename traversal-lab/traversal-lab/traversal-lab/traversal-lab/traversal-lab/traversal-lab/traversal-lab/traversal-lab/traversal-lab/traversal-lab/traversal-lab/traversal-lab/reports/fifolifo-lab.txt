Lab report for Stack and Queue Lab - rander10
Timestamp: 2013-10-21 23:03:00

|  :scenario |                                  :title |                                   :result | :score |
|------------+-----------------------------------------+-------------------------------------------+--------|
|    working |   Test student code vs instructor tests |                                      Pass |     45 |
| qualifying |   Test student tests vs instructor code |                                      Pass |      5 |
|    broke-1 |            Push doesn't increment size. |      Pass: Student tests detected errors. |      5 |
|    broke-2 |       Pop of empty makes size negative. |      Pass: Student tests detected errors. |      5 |
|    broke-3 |            Pop doesn't remove elements. |      Pass: Student tests detected errors. |      5 |
|    broke-4 |                  Pop reverses elements. |      Pass: Student tests detected errors. |      5 |
|    broke-5 |         Enqueue doesn't increment size. |      Pass: Student tests detected errors. |      5 |
|    broke-6 |   Dequeue of empty makes size negative. |      Pass: Student tests detected errors. |      5 |
|    broke-7 |  Dequeue doesn't reverse when flipping. | Fail: Student tests did not detect error. |      0 |
|    broke-8 | Dequeue doesn't dequeue after flipping. |      Pass: Student tests detected errors. |      5 |
|    broke-9 |            Flipping doesn't erase back. | Fail: Student tests did not detect error. |      0 |
|   broke-10 |             Queue behaves like a stack. | Fail: Student tests did not detect error. |      0 |
|      total |                             Total Score |                                           |     85 |

Details:


** Details for Test student code vs instructor tests

....................

Finished in 0.02612 seconds
20 examples, 0 failures


** Details for Test student tests vs instructor code

.............

Finished in 0.00263 seconds
13 examples, 0 failures


** Details for Push doesn't increment size.

....F........

Failures:

  1) The stack push should increment size
     Expected: 1
          got: 0 (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-1/spec/fifolifo/core_spec.clj:38

Finished in 0.01657 seconds
13 examples, 1 failures


** Details for Pop of empty makes size negative.

.....F.......

Failures:

  1) The stack pop should not return a negitive value if the stack is empty
     Expected: 0
          got: -1 (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-2/spec/fifolifo/core_spec.clj:45

Finished in 0.01552 seconds
13 examples, 1 failures


** Details for Pop doesn't remove elements.

......F......

Failures:

  1) The stack pop should remove elments
     Expected: #fifolifo.core.Stack{:top (2 3), :size 2}
          got: #fifolifo.core.Stack{:top (1 2 3), :size 2} (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-3/spec/fifolifo/core_spec.clj:49

Finished in 0.09612 seconds
13 examples, 1 failures


** Details for Pop reverses elements.

......FF.....

Failures:

  1) The stack pop should remove elments
     Expected: #fifolifo.core.Stack{:top (2 3), :size 2}
          got: #fifolifo.core.Stack{:top (1 2), :size 2} (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-4/spec/fifolifo/core_spec.clj:49

  2) The stack pop it should not reverse elements
     Expected: 2
          got: 3 (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-4/spec/fifolifo/core_spec.clj:53

Finished in 0.09620 seconds
13 examples, 2 failures


** Details for Enqueue doesn't increment size.

...........F.

Failures:

  1) The enqueue fucntion should increment size
     Expected: 1
          got: 0 (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-5/spec/fifolifo/core_spec.clj:74

Finished in 0.01552 seconds
13 examples, 1 failures


** Details for Dequeue of empty makes size negative.

............F

Failures:

  1) The dequeue function should not make a negative size
     Expected: 0
          got: -1 (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-6/spec/fifolifo/core_spec.clj:80

Finished in 0.01210 seconds
13 examples, 1 failures


** Details for Dequeue doesn't reverse when flipping.

.............

Finished in 0.00284 seconds
13 examples, 0 failures


** Details for Dequeue doesn't dequeue after flipping.

..FFFFF...FFF

Failures:

  1) The stack declaration should have a size of zero.
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-8/spec/fifolifo/core_spec.clj:26

  2) The Stack size should return 0 when an empty list is created
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-8/spec/fifolifo/core_spec.clj:31

  3) The stack push should increment size
     Expected: 1
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-8/spec/fifolifo/core_spec.clj:38

  4) The stack pop should not return a negitive value if the stack is empty
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-8/spec/fifolifo/core_spec.clj:45

  5) The stack pop should remove elments
     Expected: #fifolifo.core.Stack{:top (2 3), :size 2}
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-8/spec/fifolifo/core_spec.clj:49

  6) The queue declaration should have a size of zero.
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-8/spec/fifolifo/core_spec.clj:68

  7) The enqueue fucntion should increment size
     Expected: 1
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-8/spec/fifolifo/core_spec.clj:74

  8) The dequeue function should not make a negative size
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/rander10/broke-8/spec/fifolifo/core_spec.clj:80

Finished in 0.09318 seconds
13 examples, 8 failures


** Details for Flipping doesn't erase back.

.............

Finished in 0.01098 seconds
13 examples, 0 failures


** Details for Queue behaves like a stack.

.............

Finished in 0.00260 seconds
13 examples, 0 failures
