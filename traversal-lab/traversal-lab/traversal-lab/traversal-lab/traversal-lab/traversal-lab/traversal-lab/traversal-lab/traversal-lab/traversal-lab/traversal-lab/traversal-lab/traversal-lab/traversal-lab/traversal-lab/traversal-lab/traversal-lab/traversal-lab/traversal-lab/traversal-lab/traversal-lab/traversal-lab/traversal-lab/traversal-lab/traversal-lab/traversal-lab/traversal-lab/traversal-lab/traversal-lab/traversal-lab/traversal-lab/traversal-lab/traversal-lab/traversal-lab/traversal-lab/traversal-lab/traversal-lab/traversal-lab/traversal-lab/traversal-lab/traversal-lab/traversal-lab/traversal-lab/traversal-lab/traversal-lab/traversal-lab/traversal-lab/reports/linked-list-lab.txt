Lab report for Linked List Lab - dfallon
Timestamp: 2013-09-29 19:55:45

|  :scenario |                                    :title |                              :result | :score |
|------------+-------------------------------------------+--------------------------------------+--------|
|    working |     Test student code vs instructor tests |                                 Pass |     45 |
| qualifying |     Test student tests vs instructor code |                                 Pass |      5 |
|    broke-1 |             Insert at end mishandles nil. | Pass: Student tests detected errors. |      5 |
|    broke-2 |     Sorted insert sorts in reverse order. | Pass: Student tests detected errors. |      5 |
|    broke-3 |     Sorted insert doesn't recycle memory. | Pass: Student tests detected errors. |      5 |
|    broke-4 |          Search doesn't handle base case. | Pass: Student tests detected errors. |      5 |
|    broke-5 |                Delete removes all copies. | Pass: Student tests detected errors. |      5 |
|    broke-6 |                           Delete doesn't. | Pass: Student tests detected errors. |      5 |
|    broke-7 |              Delete all only deletes one. | Pass: Student tests detected errors. |      5 |
|    broke-8 |                Delete all truncates list. | Pass: Student tests detected errors. |      5 |
|    broke-9 |          Efficient delete doesn't delete. | Pass: Student tests detected errors. |      5 |
|   broke-10 | Efficient delete doesn't return original. | Pass: Student tests detected errors. |      5 |
|      total |                               Total Score |                                      |    100 |

Details:


** Details for Test student code vs instructor tests

........................

Finished in 0.00527 seconds
24 examples, 0 failures


** Details for Test student tests vs instructor code

....................

Finished in 0.00479 seconds
20 examples, 0 failures


** Details for Insert at end mishandles nil.

.......F............

Failures:

  1) insert-at-end should insert an item at the end
     Expected: #linked_lists.core.Cons{:car 5, :cdr nil}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/dfallon/broke-1/spec/linked_lists/core_spec.clj:38

Finished in 0.05094 seconds
20 examples, 1 failures


** Details for Sorted insert sorts in reverse order.

........FF..........

Failures:

  1) sorted insert should insert an item in the correct location
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr nil}}}}}
          got: #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 5, :cdr nil}}}}} (using =)
     /home/grader/quarry/linked-list-lab/dfallon/broke-2/spec/linked_lists/core_spec.clj:44

  2) sorted insert should put an item at the end if it doesnt fit in the middle
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 6, :cdr nil}}}}}
          got: #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 5, :cdr nil}}}}} (using =)
     /home/grader/quarry/linked-list-lab/dfallon/broke-2/spec/linked_lists/core_spec.clj:48

Finished in 0.05477 seconds
20 examples, 2 failures


** Details for Sorted insert doesn't recycle memory.

..........F.........

Failures:

  1) sorted insert should recycle memory
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/dfallon/broke-3/spec/linked_lists/core_spec.clj:52

Finished in 0.00574 seconds
20 examples, 1 failures


** Details for Search doesn't handle base case.

............F....F..

Failures:

  1) search should return nil, if no item exists
     Expected falsy but was: true
     /home/grader/quarry/linked-list-lab/dfallon/broke-4/spec/linked_lists/core_spec.clj:62

  2) efficient-delete should return the same list rather than a copy
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/dfallon/broke-4/spec/linked_lists/core_spec.clj:90

Finished in 0.00611 seconds
20 examples, 2 failures


** Details for Delete removes all copies.

..............F....F

Failures:

  1) delete should not delete multiple items
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
     not to =: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
     /home/grader/quarry/linked-list-lab/dfallon/broke-5/spec/linked_lists/core_spec.clj:72

  2) efficient-delete should not delete multiple items
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
     not to =: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
     /home/grader/quarry/linked-list-lab/dfallon/broke-5/spec/linked_lists/core_spec.clj:97

Finished in 0.05189 seconds
20 examples, 2 failures


** Details for Delete doesn't.

.............F....F.

Failures:

  1) delete delete a single item
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}} (using =)
     /home/grader/quarry/linked-list-lab/dfallon/broke-6/spec/linked_lists/core_spec.clj:68

  2) efficient-delete delete a single item
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}} (using =)
     /home/grader/quarry/linked-list-lab/dfallon/broke-6/spec/linked_lists/core_spec.clj:93

Finished in 0.05872 seconds
20 examples, 2 failures


** Details for Delete all only deletes one.

................F...

Failures:

  1) delete-all should delete multiple items
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}} (using =)
     /home/grader/quarry/linked-list-lab/dfallon/broke-7/spec/linked_lists/core_spec.clj:83

Finished in 0.04654 seconds
20 examples, 1 failures


** Details for Delete all truncates list.

...............FF...

Failures:

  1) delete-all delete a single item
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr nil}}}}} (using =)
     /home/grader/quarry/linked-list-lab/dfallon/broke-8/spec/linked_lists/core_spec.clj:79

  2) delete-all should delete multiple items
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/dfallon/broke-8/spec/linked_lists/core_spec.clj:83

Finished in 0.06140 seconds
20 examples, 2 failures


** Details for Efficient delete doesn't delete.

...............FF.F.

Failures:

  1) delete-all delete a single item
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr nil}}}}} (using =)
     /home/grader/quarry/linked-list-lab/dfallon/broke-9/spec/linked_lists/core_spec.clj:79

  2) delete-all should delete multiple items
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/dfallon/broke-9/spec/linked_lists/core_spec.clj:83

  3) efficient-delete delete a single item
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 7, :cdr nil}}}}}}} (using =)
     /home/grader/quarry/linked-list-lab/dfallon/broke-9/spec/linked_lists/core_spec.clj:93

Finished in 0.06825 seconds
20 examples, 3 failures


** Details for Efficient delete doesn't return original.

.................F..

Failures:

  1) efficient-delete should return the same list rather than a copy
     Expected truthy but was: false
     /home/grader/quarry/linked-list-lab/dfallon/broke-10/spec/linked_lists/core_spec.clj:90

Finished in 0.00555 seconds
20 examples, 1 failures
