Lab report for Linked List Lab - rczibor
Timestamp: 2013-10-02 23:56:41

|  :scenario |                                    :title |                                   :result | :score |
|------------+-------------------------------------------+-------------------------------------------+--------|
|    working |     Test student code vs instructor tests |                                      Fail |     30 |
| qualifying |     Test student tests vs instructor code |                                      Pass |      5 |
|    broke-1 |             Insert at end mishandles nil. |      Pass: Student tests detected errors. |      5 |
|    broke-2 |     Sorted insert sorts in reverse order. |      Pass: Student tests detected errors. |      5 |
|    broke-3 |     Sorted insert doesn't recycle memory. | Fail: Student tests did not detect error. |      0 |
|    broke-4 |          Search doesn't handle base case. |      Pass: Student tests detected errors. |      5 |
|    broke-5 |                Delete removes all copies. | Fail: Student tests did not detect error. |      0 |
|    broke-6 |                           Delete doesn't. |      Pass: Student tests detected errors. |      5 |
|    broke-7 |              Delete all only deletes one. |      Pass: Student tests detected errors. |      5 |
|    broke-8 |                Delete all truncates list. |      Pass: Student tests detected errors. |      5 |
|    broke-9 |          Efficient delete doesn't delete. |      Pass: Student tests detected errors. |      5 |
|   broke-10 | Efficient delete doesn't return original. | Fail: Student tests did not detect error. |      0 |
|      total |                               Total Score |                                           |     70 |

Details:


** Details for Test student code vs instructor tests

.............FFF..FFFFF.

Failures:

  1) sorted insert should put the element at in the middle in the average case.
     Don't know how to create ISeq from: java.lang.Long
     java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long
     	... 4 stack levels elided ...
     	at linked_lists.core$sorted_insert.invoke(core.clj:46)
     	at linked_lists.core$sorted_insert.invoke(core.clj:48)
     	at linked_lists.core_spec$eval1267$fn__1268$fn__1285.invoke(/home/grader/quarry/linked-list-lab/rczibor/working/spec/linked_lists/core_spec.clj:60)
     	... 42 stack levels elided ...

  2) sorted insert should not duplicate the remainder of the list after the insertion point.
     Don't know how to create ISeq from: java.lang.Long
     java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long
     	... 4 stack levels elided ...
     	at linked_lists.core$sorted_insert.invoke(core.clj:46)
     	at linked_lists.core$sorted_insert.invoke(core.clj:48)
     	at linked_lists.core_spec$eval1267$fn__1268$fn__1289.invoke(/home/grader/quarry/linked-list-lab/rczibor/working/spec/linked_lists/core_spec.clj:65)
     	... 42 stack levels elided ...

  3) sorted insert should put the element at the end if it's the last element.
     Don't know how to create ISeq from: java.lang.Long
     java.lang.IllegalArgumentException: Don't know how to create ISeq from: java.lang.Long
     	... 4 stack levels elided ...
     	at linked_lists.core$sorted_insert.invoke(core.clj:46)
     	at linked_lists.core$sorted_insert.invoke(core.clj:48)
     	at linked_lists.core_spec$eval1267$fn__1268$fn__1292.invoke(/home/grader/quarry/linked-list-lab/rczibor/working/spec/linked_lists/core_spec.clj:69)
     	... 42 stack levels elided ...

  4) delete should delete things once that are in the list.
     Expected: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}} (using =)
     /home/grader/quarry/linked-list-lab/rczibor/working/spec/linked_lists/core_spec.clj:87

  5) delete should not delete that are not in the list.
     Expected: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rczibor/working/spec/linked_lists/core_spec.clj:95

  6) delete-all should delete things completely that are in the list.
     Expected: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}} (using =)
     /home/grader/quarry/linked-list-lab/rczibor/working/spec/linked_lists/core_spec.clj:102

  7) delete-all should not delete-all that are not in the list.
     Expected: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rczibor/working/spec/linked_lists/core_spec.clj:110

  8) efficient-delete should delete things once that are in the list.
     Expected: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}} (using =)
     /home/grader/quarry/linked-list-lab/rczibor/working/spec/linked_lists/core_spec.clj:117

Finished in 0.06777 seconds
24 examples, 8 failures


** Details for Test student tests vs instructor code

.......................

Finished in 0.00833 seconds
23 examples, 0 failures


** Details for Insert at end mishandles nil.

.......F...............

Failures:

  1) insert-at-end should work with empty lists
     Expected: #linked_lists.core.Cons{:car 10, :cdr nil}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-1/spec/linked_lists/core_spec.clj:38

Finished in 0.06858 seconds
23 examples, 1 failures


** Details for Sorted insert sorts in reverse order.

..........F............

Failures:

  1) sorted insert should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 5, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-2/spec/linked_lists/core_spec.clj:51

Finished in 0.05415 seconds
23 examples, 1 failures


** Details for Sorted insert doesn't recycle memory.

.......................

Finished in 0.00487 seconds
23 examples, 0 failures


** Details for Search doesn't handle base case.

............F..........

Failures:

  1) search should work with lists that have data
     Expected: false
          got: true (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-4/spec/linked_lists/core_spec.clj:60

Finished in 0.00676 seconds
23 examples, 1 failures


** Details for Delete removes all copies.

.......................

Finished in 0.00510 seconds
23 examples, 0 failures


** Details for Delete doesn't.

..............FF....F.F

Failures:

  1) delete should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-6/spec/linked_lists/core_spec.clj:69

  2) delete should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-6/spec/linked_lists/core_spec.clj:72

  3) efficient-delete should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-6/spec/linked_lists/core_spec.clj:91

  4) efficient-delete should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-6/spec/linked_lists/core_spec.clj:97

Finished in 0.05520 seconds
23 examples, 4 failures


** Details for Delete all only deletes one.

..................F....

Failures:

  1) delete-all should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 10, :cdr nil}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}} (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-7/spec/linked_lists/core_spec.clj:83

Finished in 0.04994 seconds
23 examples, 1 failures


** Details for Delete all truncates list.

.................FF....

Failures:

  1) delete-all should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-8/spec/linked_lists/core_spec.clj:80

  2) delete-all should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 10, :cdr nil}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-8/spec/linked_lists/core_spec.clj:83

Finished in 0.05549 seconds
23 examples, 2 failures


** Details for Efficient delete doesn't delete.

.................FF.F.F

Failures:

  1) delete-all should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-9/spec/linked_lists/core_spec.clj:80

  2) delete-all should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 10, :cdr nil}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-9/spec/linked_lists/core_spec.clj:83

  3) efficient-delete should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-9/spec/linked_lists/core_spec.clj:91

  4) efficient-delete should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 10, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/rczibor/broke-9/spec/linked_lists/core_spec.clj:97

Finished in 0.05372 seconds
23 examples, 4 failures


** Details for Efficient delete doesn't return original.

.......................

Finished in 0.01039 seconds
23 examples, 0 failures
