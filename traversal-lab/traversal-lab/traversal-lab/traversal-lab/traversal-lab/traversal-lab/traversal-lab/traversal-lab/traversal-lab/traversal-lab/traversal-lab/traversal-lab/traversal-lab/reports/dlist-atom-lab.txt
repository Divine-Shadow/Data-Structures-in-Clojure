Lab report for Doubly Linked Lists with Atoms - pzellera
Timestamp: 2013-11-04 10:37:27

|  :scenario |                                :title |                   :result | :score |
|------------+---------------------------------------+---------------------------+--------|
|    working | Test student code vs instructor tests |                      Fail |     26 |
| qualifying | Test student tests vs instructor code |                      Fail |      4 |
| qualifying |           Qualifying Scenarios Failed | No further scenarios run. |      0 |
|      total |                           Total Score |                           |     30 |

Details:


** Details for Test student code vs instructor tests

......F..F...F..F...F.FFFF....FFFFFF

Failures:

  1) Insert-front on empty list will convert to a list properly
     Expected: (10)
          got: nil (using =)
     /home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:50

  2) Insert-front multiple times will convert to a list properly
     Expected: (10 20 30)
          got: nil (using =)
     /home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:75

  3) Insert-last on empty list will convert to a list properly
     Expected: (10)
          got: nil (using =)
     /home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:101

  4) Insert-last multiple times will convert to a list properly
     Expected: (30 20 10)
          got: nil (using =)
     /home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:125

  5) Insert-sorted on empty list will convert to a list properly
     Expected: (10)
          got: nil (using =)
     /home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:152

  6) Insert-sorted multiple times will link the element back to the sentinel
     clojure.lang.Symbol cannot be cast to java.lang.Number
     java.lang.ClassCastException: clojure.lang.Symbol cannot be cast to java.lang.Number
     	... 1 stack levels elided ...
     	at dlist_atom.core$find_location.invoke(core.clj:140)
     	at dlist_atom.core$find_location.invoke(core.clj:141)
     	at dlist_atom.core$insert_sorted.invoke(core.clj:150)
     	at dlist_atom.core_spec$eval1432$fn__1433$fn__1442.invoke(/home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:166)
     	... 42 stack levels elided ...

  7) Insert-sorted multiple times will insert 10 20 30 properly
     clojure.lang.Symbol cannot be cast to java.lang.Number
     java.lang.ClassCastException: clojure.lang.Symbol cannot be cast to java.lang.Number
     	... 1 stack levels elided ...
     	at dlist_atom.core$find_location.invoke(core.clj:140)
     	at dlist_atom.core$find_location.invoke(core.clj:141)
     	at dlist_atom.core$insert_sorted.invoke(core.clj:150)
     	at dlist_atom.core_spec$eval1432$fn__1433$fn__1448.invoke(/home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:174)
     	... 42 stack levels elided ...

  8) Insert-sorted multiple times will insert 30 20 10 properly
     Expected: (30 20 10)
          got: nil (using =)
     /home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:183

  9) Insert-sorted multiple times will insert 10 30 20 properly
     clojure.lang.Symbol cannot be cast to java.lang.Number
     java.lang.ClassCastException: clojure.lang.Symbol cannot be cast to java.lang.Number
     	... 1 stack levels elided ...
     	at dlist_atom.core$find_location.invoke(core.clj:140)
     	at dlist_atom.core$find_location.invoke(core.clj:141)
     	at dlist_atom.core$insert_sorted.invoke(core.clj:150)
     	at dlist_atom.core_spec$eval1432$fn__1433$fn__1460.invoke(/home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:188)
     	... 42 stack levels elided ...

  10) list-to-dlist creates an empty list properly
     
     java.lang.NullPointerException
     	... 2 stack levels elided ...
     	at dlist_atom.core$d_next.invoke(core.clj:85)
     	at dlist_atom.core$show_dlist.invoke(core.clj:98)
     	at dlist_atom.core_spec$eval1531$fn__1532$fn__1537.invoke(/home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:229)
     	... 42 stack levels elided ...

  11) list-to-dlist creates full lists properly
     
     java.lang.NullPointerException
     	... 2 stack levels elided ...
     	at dlist_atom.core$d_next.invoke(core.clj:85)
     	at dlist_atom.core$show_dlist.invoke(core.clj:98)
     	at dlist_atom.core_spec$eval1531$fn__1532$fn__1543.invoke(/home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:233)
     	... 42 stack levels elided ...

  12) delete should do nothing to empty lists.
     Expected: ()
          got: nil (using =)
     /home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:241

  13) delete deletes elements properly.
     
     java.lang.NullPointerException
     	... 2 stack levels elided ...
     	at dlist_atom.core$d_next.invoke(core.clj:85)
     	at dlist_atom.core$show_dlist.invoke(core.clj:98)
     	at dlist_atom.core_spec$eval1556$fn__1557$fn__1570.invoke(/home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:246)
     	... 42 stack levels elided ...

  14) reverse should not mess up empty lists.
     Expected: ()
          got: nil (using =)
     /home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:292

  15) reverse should reverse full lists.
     
     java.lang.NullPointerException
     	... 2 stack levels elided ...
     	at dlist_atom.core$d_size.invoke(core.clj:47)
     	at dlist_atom.core_spec$eval1639$fn__1640$fn__1653.invoke(/home/grader/quarry/dlist-atom-lab/pzellera/working/spec/dlist_atom/core_spec.clj:297)
     	... 42 stack levels elided ...

Finished in 0.07364 seconds
36 examples, 15 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core, being replaced by: #'dlist-atom.core/reverse


** Details for Test student tests vs instructor code

..................FF

Failures:

  1) list to dlist should work with empty lists
     
     java.lang.StackOverflowError
     	... 1024 stack levels elided ...

  2) list to dlist should work with lists that have data
     
     java.lang.NullPointerException
     	... 2 stack levels elided ...
     	at dlist_atom.core$d_next.invoke(core.clj:85)
     	at dlist_atom.core$insert_front.invoke(core.clj:124)
     	at dlist_atom.core_spec$eval1391$fn__1392$fn__1401.invoke(/home/grader/quarry/dlist-atom-lab/pzellera/qualifying/spec/dlist_atom/core_spec.clj:130)
     	... 42 stack levels elided ...

Finished in 0.13588 seconds
20 examples, 2 failures
WARNING: reverse already refers to: #'clojure.core/reverse in namespace: dlist-atom.core-spec, being replaced by: #'dlist-atom.core/reverse
