Lab report for Linked List Lab - dcuevas
Timestamp: 2013-09-30 16:38:37

|  :scenario |                                    :title |                                   :result | :score |
|------------+-------------------------------------------+-------------------------------------------+--------|
|    working |     Test student code vs instructor tests |                                      Pass |     45 |
| qualifying |     Test student tests vs instructor code |                                      Pass |      5 |
|    broke-1 |             Insert at end mishandles nil. |      Pass: Student tests detected errors. |      5 |
|    broke-2 |     Sorted insert sorts in reverse order. |      Pass: Student tests detected errors. |      5 |
|    broke-3 |     Sorted insert doesn't recycle memory. | Fail: Student tests did not detect error. |      0 |
|    broke-4 |          Search doesn't handle base case. |      Pass: Student tests detected errors. |      5 |
|    broke-5 |                Delete removes all copies. | Fail: Student tests did not detect error. |      0 |
|    broke-6 |                           Delete doesn't. |      Pass: Student tests detected errors. |      5 |
|    broke-7 |              Delete all only deletes one. |      Pass: Student tests detected errors. |      5 |
|    broke-8 |                Delete all truncates list. |      Pass: Student tests detected errors. |      5 |
|    broke-9 |          Efficient delete doesn't delete. |      Pass: Student tests detected errors. |      5 |
|   broke-10 | Efficient delete doesn't return original. | Fail: Student tests did not detect error. |      0 |
|      total |                               Total Score |                                           |     85 |

Details:


** Details for Test student code vs instructor tests

........................

Finished in 0.00511 seconds
24 examples, 0 failures


** Details for Test student tests vs instructor code

........................

Finished in 0.00530 seconds
24 examples, 0 failures


** Details for Insert at end mishandles nil.

.......FFF..............

Failures:

  1) insert-at-end creates a cons cell.
     Expected: nil
     not to =: nil
     /home/grader/quarry/linked-list-lab/dcuevas/broke-1/spec/linked_lists/core_spec.clj:37

  2) insert-at-end should work with empty lists
     Expected: #linked_lists.core.Cons{:car 10, :cdr nil}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/dcuevas/broke-1/spec/linked_lists/core_spec.clj:40

  3) insert-at-end should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 5, :cdr nil}}}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/dcuevas/broke-1/spec/linked_lists/core_spec.clj:44

Finished in 0.05429 seconds
24 examples, 3 failures


** Details for Sorted insert sorts in reverse order.

............F...........

Failures:

  1) sorted insert should should sort through the list
     Expected: #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 7, :cdr #linked_lists.core.Cons{:car 8, :cdr nil}}}}
          got: #linked_lists.core.Cons{:car 7, :cdr #linked_lists.core.Cons{:car 5, :cdr #linked_lists.core.Cons{:car 6, :cdr #linked_lists.core.Cons{:car 8, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/dcuevas/broke-2/spec/linked_lists/core_spec.clj:55

Finished in 0.07496 seconds
24 examples, 1 failures


** Details for Sorted insert doesn't recycle memory.

........................

Finished in 0.00568 seconds
24 examples, 0 failures


** Details for Search doesn't handle base case.

.............F.F........

Failures:

  1) search Should return false if list is empty.
     Expected: false
          got: true (using =)
     /home/grader/quarry/linked-list-lab/dcuevas/broke-4/spec/linked_lists/core_spec.clj:60

  2) search should work with lists that has data and elt not found
     Expected: false
          got: true (using =)
     /home/grader/quarry/linked-list-lab/dcuevas/broke-4/spec/linked_lists/core_spec.clj:66

Finished in 0.00677 seconds
24 examples, 2 failures


** Details for Delete removes all copies.

........................

Finished in 0.00507 seconds
24 examples, 0 failures


** Details for Delete doesn't.

.................F....F.

Failures:

  1) delete Should delete the selected elt.
     Expected: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 4, :cdr nil}}
          got: #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 4, :cdr #linked_lists.core.Cons{:car 6, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/dcuevas/broke-6/spec/linked_lists/core_spec.clj:73

  2) efficient-delete should delete the element if it finds it
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/dcuevas/broke-6/spec/linked_lists/core_spec.clj:92

Finished in 0.06203 seconds
24 examples, 2 failures


** Details for Delete all only deletes one.

...................F....

Failures:

  1) delete-all should delete all copies of the elt
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/dcuevas/broke-7/spec/linked_lists/core_spec.clj:81

Finished in 0.06766 seconds
24 examples, 1 failures


** Details for Delete all truncates list.

...................F....

Failures:

  1) delete-all should delete all copies of the elt
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 1, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/dcuevas/broke-8/spec/linked_lists/core_spec.clj:81

Finished in 0.06221 seconds
24 examples, 1 failures


** Details for Efficient delete doesn't delete.

...................F..F.

Failures:

  1) delete-all should delete all copies of the elt
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 4, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 1, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/dcuevas/broke-9/spec/linked_lists/core_spec.clj:81

  2) efficient-delete should delete the element if it finds it
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/dcuevas/broke-9/spec/linked_lists/core_spec.clj:92

Finished in 0.05760 seconds
24 examples, 2 failures


** Details for Efficient delete doesn't return original.

........................

Finished in 0.01359 seconds
24 examples, 0 failures
