Lab report for Stack and Queue Lab - abarkat
Timestamp: 2013-10-21 22:36:51

|  :scenario |                                  :title |                                   :result | :score |
|------------+-----------------------------------------+-------------------------------------------+--------|
|    working |   Test student code vs instructor tests |                                      Pass |     45 |
| qualifying |   Test student tests vs instructor code |                                      Pass |      5 |
|    broke-1 |            Push doesn't increment size. |      Pass: Student tests detected errors. |      5 |
|    broke-2 |       Pop of empty makes size negative. |      Pass: Student tests detected errors. |      5 |
|    broke-3 |            Pop doesn't remove elements. |      Pass: Student tests detected errors. |      5 |
|    broke-4 |                  Pop reverses elements. |      Pass: Student tests detected errors. |      5 |
|    broke-5 |         Enqueue doesn't increment size. |      Pass: Student tests detected errors. |      5 |
|    broke-6 |   Dequeue of empty makes size negative. | Fail: Student tests did not detect error. |      0 |
|    broke-7 |  Dequeue doesn't reverse when flipping. |      Pass: Student tests detected errors. |      5 |
|    broke-8 | Dequeue doesn't dequeue after flipping. |      Pass: Student tests detected errors. |      5 |
|    broke-9 |            Flipping doesn't erase back. | Fail: Student tests did not detect error. |      0 |
|   broke-10 |             Queue behaves like a stack. |      Pass: Student tests detected errors. |      5 |
|      total |                             Total Score |                                           |     90 |

Details:


** Details for Test student code vs instructor tests

....................

Finished in 0.01583 seconds
20 examples, 0 failures


** Details for Test student tests vs instructor code

....................

Finished in 0.01297 seconds
20 examples, 0 failures


** Details for Push doesn't increment size.

...F..F.............

Failures:

  1) Push Should be size of n if I push n number elements
     Expected: 4
          got: 0 (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-1/spec/fifolifo/core_spec.clj:24

  2) Pop should be size (n-1) if I push n elements and pop an element
     Expected: 2
          got: -1 (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-1/spec/fifolifo/core_spec.clj:37

Finished in 0.01743 seconds
20 examples, 2 failures


** Details for Pop of empty makes size negative.

.....F..............

Failures:

  1) Pop should return nil if in the case of an empty stack.
     Expected: #fifolifo.core.Stack{:top nil, :size 0}
          got: #fifolifo.core.Stack{:top (), :size -1} (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-2/spec/fifolifo/core_spec.clj:35

Finished in 0.08670 seconds
20 examples, 1 failures


** Details for Pop doesn't remove elements.

.......F............

Failures:

  1) Pop should change the old top to a new top.
     Expected: 8
     not to =: 8
     /home/grader/quarry/fifolifo-lab/abarkat/broke-3/spec/fifolifo/core_spec.clj:42

Finished in 0.02261 seconds
20 examples, 1 failures


** Details for Pop reverses elements.

....F...............

Failures:

  1) Top should return the top of the stack.
     Expected: 9
          got: 1 (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-4/spec/fifolifo/core_spec.clj:29

Finished in 0.00800 seconds
20 examples, 1 failures


** Details for Enqueue doesn't increment size.

.............F....FF

Failures:

  1) Enqueue should increase size by n if I enqueue n elements.
     Expected: 3
          got: 0 (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-5/spec/fifolifo/core_spec.clj:63

  2) peek test is the first additional test for above
     Expected: 10
          got: 5 (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-5/spec/fifolifo/core_spec.clj:87

  3) peek test is the second additional test for above
     Expected: 10
          got: 5 (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-5/spec/fifolifo/core_spec.clj:90

Finished in 0.01349 seconds
20 examples, 3 failures


** Details for Dequeue of empty makes size negative.

....................

Finished in 0.00419 seconds
20 examples, 0 failures


** Details for Dequeue doesn't reverse when flipping.

.................F..

Failures:

  1) peek test should return the value that it will be deleted when dequeue is called
     Expected: 5
          got: 15 (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-7/spec/fifolifo/core_spec.clj:84

Finished in 0.01681 seconds
20 examples, 1 failures


** Details for Dequeue doesn't dequeue after flipping.

..FFFFFF..FF.FF..FFF

Failures:

  1) The stack declaration should have a size of zero.
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:19

  2) Push Should be size of n if I push n number elements
     Expected: 4
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:24

  3) Top should return the top of the stack.
     Expected: 9
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:29

  4) Pop should return nil if in the case of an empty stack.
     Expected: #fifolifo.core.Stack{:top nil, :size 0}
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:35

  5) Pop should be size (n-1) if I push n elements and pop an element
     Expected: 2
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:37

  6) Pop should change the old top to a new top.
     Expected: nil
     not to =: nil
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:42

  7) The queue declaration should have a size of zero.
     Expected: 0
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:54

  8) Enqueue should add element to the back of the queue.
     Expected: 8
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:59

  9) Enqueue should increase size by n if I enqueue n elements.
     Expected: 3
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:63

  10) Dequeue should should work for queues that have data
     Expected: #fifolifo.core.Queue{:back (5 4), :front (), :size 1}
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:70

  11) peek test should return the value that it will be deleted when dequeue is called
     Expected: 5
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:84

  12) peek test is the first additional test for above
     Expected: 10
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:87

  13) peek test is the second additional test for above
     Expected: 10
          got: nil (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-8/spec/fifolifo/core_spec.clj:90

Finished in 0.11864 seconds
20 examples, 13 failures


** Details for Flipping doesn't erase back.

....................

Finished in 0.00431 seconds
20 examples, 0 failures


** Details for Queue behaves like a stack.

..............F..F.F

Failures:

  1) Dequeue should should work for queues that have data
     Expected: #fifolifo.core.Queue{:back (5 4), :front (), :size 1}
          got: #fifolifo.core.Queue{:back (4), :front (4), :size 1} (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-10/spec/fifolifo/core_spec.clj:70

  2) peek test should return the value that it will be deleted when dequeue is called
     Expected: 5
          got: 15 (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-10/spec/fifolifo/core_spec.clj:84

  3) peek test is the second additional test for above
     Expected: 10
          got: 20 (using =)
     /home/grader/quarry/fifolifo-lab/abarkat/broke-10/spec/fifolifo/core_spec.clj:90

Finished in 0.18114 seconds
20 examples, 3 failures
