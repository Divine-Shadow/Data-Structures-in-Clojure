Lab report for Linked List Lab - runverza
Timestamp: 2013-09-26 12:22:38

|  :scenario |                                    :title |                              :result | :score |
|------------+-------------------------------------------+--------------------------------------+--------|
|    working |     Test student code vs instructor tests |                                 Pass |     45 |
| qualifying |     Test student tests vs instructor code |                                 Pass |      5 |
|    broke-1 |             Insert at end mishandles nil. | Pass: Student tests detected errors. |      5 |
|    broke-2 |     Sorted insert sorts in reverse order. | Pass: Student tests detected errors. |      5 |
|    broke-3 |     Sorted insert doesn't recycle memory. | Pass: Student tests detected errors. |      5 |
|    broke-4 |          Search doesn't handle base case. | Pass: Student tests detected errors. |      5 |
|    broke-5 |                Delete removes all copies. | Pass: Student tests detected errors. |      5 |
|    broke-6 |                           Delete doesn't. | Pass: Student tests detected errors. |      5 |
|    broke-7 |              Delete all only deletes one. | Pass: Student tests detected errors. |      5 |
|    broke-8 |                Delete all truncates list. | Pass: Student tests detected errors. |      5 |
|    broke-9 |          Efficient delete doesn't delete. | Pass: Student tests detected errors. |      5 |
|   broke-10 | Efficient delete doesn't return original. | Pass: Student tests detected errors. |      5 |
|      total |                               Total Score |                                      |    100 |

Details:


** Details for Test student code vs instructor tests

........................

Finished in 0.00559 seconds
24 examples, 0 failures


** Details for Test student tests vs instructor code

.......................

Finished in 0.00583 seconds
23 examples, 0 failures


** Details for Insert at end mishandles nil.

.......FF..............

Failures:

  1) insert-at-end should work with empty lists
     Expected: #linked_lists.core.Cons{:car 10, :cdr nil}
          got: nil (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-1/spec/linked_lists/core_spec.clj:37

  2) insert-at-end should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr #linked_lists.core.Cons{:car 5, :cdr nil}}}}
          got: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-1/spec/linked_lists/core_spec.clj:40

Finished in 0.02847 seconds
23 examples, 2 failures


** Details for Sorted insert sorts in reverse order.

..........F............

Failures:

  1) sorted insert should work with lists that have data
     Expected: #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 25, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}}
          got: #linked_lists.core.Cons{:car 25, :cdr #linked_lists.core.Cons{:car 10, :cdr #linked_lists.core.Cons{:car 20, :cdr #linked_lists.core.Cons{:car 30, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-2/spec/linked_lists/core_spec.clj:48

Finished in 0.05110 seconds
23 examples, 1 failures


** Details for Sorted insert doesn't recycle memory.

...........F...........

Failures:

  1) sorted insert should recycle memory
     Expected: true
          got: false (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-3/spec/linked_lists/core_spec.clj:51

Finished in 0.00974 seconds
23 examples, 1 failures


** Details for Search doesn't handle base case.

............F.F.......F

Failures:

  1) search should work with empty lists
     Expected: false
          got: true (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-4/spec/linked_lists/core_spec.clj:57

  2) search should work with lists that have data, but the number is not in the list
     Expected: false
          got: true (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-4/spec/linked_lists/core_spec.clj:63

  3) efficient-delete shouldn't create a new list if no deletion
     Expected: true
          got: false (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-4/spec/linked_lists/core_spec.clj:93

Finished in 0.00769 seconds
23 examples, 3 failures


** Details for Delete removes all copies.

.................F.....

Failures:

  1) delete shouldn't remove all occurances
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 2, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}} (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-5/spec/linked_lists/core_spec.clj:74

Finished in 0.05229 seconds
23 examples, 1 failures


** Details for Delete doesn't.

................FF...F.

Failures:

  1) delete should return the list without the argument
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-6/spec/linked_lists/core_spec.clj:71

  2) delete shouldn't remove all occurances
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 2, :cdr nil}}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 2, :cdr nil}}}} (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-6/spec/linked_lists/core_spec.clj:74

  3) efficient-delete should return the list without the argument
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-6/spec/linked_lists/core_spec.clj:90

Finished in 0.02342 seconds
23 examples, 3 failures


** Details for Delete all only deletes one.

...................F...

Failures:

  1) delete-all should return the list without the argument
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr #linked_lists.core.Cons{:car 2, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-7/spec/linked_lists/core_spec.clj:82

Finished in 0.04246 seconds
23 examples, 1 failures


** Details for Delete all truncates list.

...................F...

Failures:

  1) delete-all should return the list without the argument
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-8/spec/linked_lists/core_spec.clj:82

Finished in 0.04965 seconds
23 examples, 1 failures


** Details for Efficient delete doesn't delete.

...................F.F.

Failures:

  1) delete-all should return the list without the argument
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr nil} (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-9/spec/linked_lists/core_spec.clj:82

  2) efficient-delete should return the list without the argument
     Expected: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}
          got: #linked_lists.core.Cons{:car 1, :cdr #linked_lists.core.Cons{:car 2, :cdr #linked_lists.core.Cons{:car 3, :cdr nil}}} (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-9/spec/linked_lists/core_spec.clj:90

Finished in 0.05438 seconds
23 examples, 2 failures


** Details for Efficient delete doesn't return original.

......................F

Failures:

  1) efficient-delete shouldn't create a new list if no deletion
     Expected: true
          got: false (using =)
     /home/grader/quarry/linked-list-lab/runverza/broke-10/spec/linked_lists/core_spec.clj:93

Finished in 0.00770 seconds
23 examples, 1 failures
